<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="xyz.likailing.cloud.service.exp.mapper.NodeDetailMapper">

    <resultMap id="BaseResultMap" type="xyz.likailing.cloud.service.exp.entity.NodeDetail">
            <id property="id" column="id" jdbcType="CHAR"/>
            <result property="nodeId" column="node_id" jdbcType="CHAR"/>
            <result property="studentId" column="team_id" jdbcType="CHAR"/>
            <result property="hasFinish" column="has_finish" jdbcType="BIT"/>
            <result property="difficulty" column="difficulty" jdbcType="INTEGER"/>
            <result property="finishTime" column="finish_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,node_id,student_id,
        has_finish,difficulty,finish_time
    </sql>
    <update id="updateDifficultyByNodeIdAndStudentId">
        update exp_node_detail
        set difficulty = #{difficulty,jdbcType=NUMERIC}
        where node_id = #{nodeId,jdbcType=VARCHAR}
          AND student_id = #{studentId,jdbcType=VARCHAR}
    </update>
    <select id="getByNodeIdAndStudentId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from exp_node_detail
        where
        node_id = #{nodeId,jdbcType=VARCHAR}
        AND student_id = #{studentId,jdbcType=VARCHAR}
    </select>
    <select id="countByHasFinish" resultType="int">
        select count(*)
        from exp_node_detail
        where has_finish = #{hasFinish,jdbcType=BOOLEAN}
    </select>
    <select id="countByHasFinishAndNodeId" resultType="int">
        select count(*)
        from exp_node_detail
        where has_finish = #{hasFinish,jdbcType=BOOLEAN}
          AND node_id = #{nodeId,jdbcType=VARCHAR}
    </select>
    <select id="countByNodeId" resultType="int">
        select count(*)
        from exp_node_detail
        where node_id = #{nodeId,jdbcType=VARCHAR}
    </select>
    <select id="countByDifficultyIsNotNullAndNodeIdAndDifficultyGreaterThan" resultType="int">
        select count(*)
        from exp_node_detail
        where difficulty is not null
          AND node_id = #{nodeId,jdbcType=VARCHAR}
          AND difficulty > #{difficulty,jdbcType=NUMERIC}
    </select>
    <select id="selectDifficultyByNodeIdAndDifficultyGreaterThan" resultType="float">
        select avg(difficulty)
        from exp_node_detail
        where node_id = #{nodeId,jdbcType=VARCHAR}
          AND difficulty > #{difficulty,jdbcType=NUMERIC}
    </select>
    <select id="selectStudentIdByCourseId" resultType="java.lang.String">
        SELECT ms.id FROM manager_student ms
                              LEFT JOIN manager_class_course cc ON cc.class_id = ms.class_id
        WHERE cc.course_id = #{courseId}
    </select>
</mapper>
